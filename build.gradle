buildscript {
    dependencies {
        classpath "org.anarres.gradle:gradle-stdproject-plugin:1.0.9"
    }
}

plugins {
    id 'com.github.spotbugs' version '4.7.1' apply false
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'eclipse'
}

apply plugin: 'org.anarres.stdmodule'

group = "org.anarres.gradle"

stdmodule {
    description "An opinionated Gradle plugin for building Java projects."
    author id: 'shevek', name: 'Shevek', email: 'github@anarres.org'
    license 'Apache-2.0'
}

apply from: "$projectDir/gradle/spotbugs.gradle"

dependencies {
    spotbugsPlugins 'com.mebigfatguy.sb-contrib:sb-contrib:7.4.7'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'

    implementation gradleApi()
    implementation localGroovy()

    implementation 'org.anarres.jdiagnostics:jdiagnostics:1.0.5'
    implementation 'com.google.guava:guava:27.1-jre'

    compile "nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0"
    compile 'org.ajoberstar:gradle-git-publish:2.1.1'
    compile('com.netflix.nebula:gradle-info-plugin:5.0.3') {
        exclude group: 'com.perforce'
    }
    compile 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    compile 'com.github.ben-manes:gradle-versions-plugin:0.22.0'

    compile 'gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0'
}

sourceCompatibility = '1.7'
targetCompatibility = '1.8'

gradlePlugin {
    plugins {
        stdproject {
            id = "org.anarres.stdproject"
            implementationClass = "org.anarres.gradle.plugin.stdproject.StdProjectPlugin"
        }
        stdmodule {
            id = "org.anarres.stdmodule"
            implementationClass = "org.anarres.gradle.plugin.stdproject.StdModulePlugin"
        }
        stdplugin {
            id = "org.anarres.stdplugin"
            implementationClass = "org.anarres.gradle.plugin.stdproject.StdPluginPlugin"
        }
    }
}

eclipse {
    project {
        natures 'edu.umd.cs.findbugs.plugin.eclipse.findbugsNature'
        buildCommand 'edu.umd.cs.findbugs.plugin.eclipse.findbugsBuilder'
    }

    classpath.downloadJavadoc = true
    classpath.downloadSources = true
}

compileJava.sourceCompatibility = '1.7'
compileJava.targetCompatibility = '1.8'

task sourcesJarGsp(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJarGsp(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJarGsp
    archives javadocJarGsp
}
