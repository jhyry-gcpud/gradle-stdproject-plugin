buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

ext.githubProjectName = rootProject.name
group = "org.anarres.gradle"

apply from: file('gradle/convention.gradle')
apply from: file('gradle/github.gradle')
apply from: file('gradle/nexus.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')

apply plugin: 'java-gradle-plugin'

dependencies {
	compile gradleApi()
	compile 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
	// compile 'com.mapvine:gradle-cobertura-plugin:0.1'
	compile 'net.saliman:gradle-cobertura-plugin:2.2.6'
	// compile 'gradle-release:gradle-release:1.1.5'
	compile 'org.ajoberstar:gradle-git:1.4.2'
	// compile 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.5'
	compile('com.netflix.nebula:gradle-info-plugin:3.0.4') {
		exclude group: 'com.perforce'
	}
	compile 'com.bmuschko:gradle-nexus-plugin:2.3.1'
	compile 'be.insaneprogramming.gradle:animalsniffer-gradle-plugin:1.4.0'
	compile 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
	// compile 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'

	compile 'org.anarres.jdiagnostics:jdiagnostics:1.0.2'

	compile 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
}

gradlePlugin {
	plugins {
		stdproject {
			id = "org.anarres.stdproject"
			implementationClass = "org.anarres.gradle.plugin.stdproject.StdProjectPlugin"
		}
		stdmodule {
			id = "org.anarres.stdmodule"
			implementationClass = "org.anarres.gradle.plugin.stdproject.StdModulePlugin"
		}
		stdplugin {
			id = "org.anarres.stdplugin"
			implementationClass = "org.anarres.gradle.plugin.stdproject.StdPluginPlugin"
		}
	}
}
